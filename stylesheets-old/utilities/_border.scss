// Border utlities
@use '../config/border';
@use '../config/breakpoints';
@use '../config/spacing';
@use '../config/paths';
@use '../config/positioning';

// --- Base

// .border, .border@[screen]
@include breakpoints.suffix(".border", true) {
  @include border.add();

  &.border-solid {
    border-style: solid !important;
  }
}

// .no-border, .no-border@[screen]
@include breakpoints.suffix(".no-border", true) {
  border: none !important;
}

@each $side in (top, right, bottom, left) {
  // .border-[side], .border-[side]@[screen]
  @include breakpoints.suffix(".no-border-#{$side}", true) {
    border-#{$side}: none !important;
  }

  // .no-border-[side], .no-border-[side]@[screen]
  @include breakpoints.suffix(".border-#{$side}", true) {
    @include border.add($side);

    &.border-solid {
      border-#{$side}-style: solid !important;
    }
  }
}

// --- Variations
.border-thick {
  border-width: border.width('thick');
}

.border-round {
  border-radius: border.$radius;
}

.border-round-bottom-right {
  border-bottom-right-radius: border.$corner-radius;
}

// --- 'Seam' effect
// utils: .border-seam-top, .border-seam-bottom-offset
@each $side, $selector in (
  'top': 'before',
  'bottom': 'after'
) {
  [class*='border-seam-#{$side}'] {
    position: relative;

    @supports(
      border-image:
        url('whatever.svg')
        #{border.seam('marker-h')} 0 0 #{border.seam('marker-w')}
        repeat
    ) {
      &::#{$selector} {
        #{$side}: -#{border.seam('marker-h') / 2}px;
        border-image:
          url('#{paths.$images}/seam.svg')
          #{border.seam('marker-h')} 0 0 #{border.seam('marker-w')}
          repeat;
        border-style: solid;
        border-width: #{border.seam('marker-h')}px 0 0 10px;
        content: '';
        display: block;
        height: 0;
        left: -#{border.seam('marker-w')}px;
        position: absolute;
        right: spacing.get(spacing.get-outside());
        z-index: positioning.z('top');

        // set outside borders at each breakpoint
        @each $screen, $width in spacing.$outside {
          @if $screen != 'default' {
            @include breakpoints.query('>#{$screen}') {
              right: spacing.get($width);
            }
          }
        }
      }
    }
  }

  .border-seam-#{$side}-offset {
    &::#{$selector} {
      #{$side}: -#{(border.seam('marker-h') / 2) + border.seam('offset')}px;
    }
  }
}
