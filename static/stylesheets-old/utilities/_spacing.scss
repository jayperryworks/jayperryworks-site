// Global spacing
// -> used to keep whitespace in the layout consistent
@use '../config/spacing';
@use '../config/breakpoints';

// --- global custom props ---

:root {
  @each $name, $length in spacing.$scale {
    --space-#{$name}: #{$length};
  }
}

// --- Margin & padding utils ---

@each $prop in (padding, margin) {
  .#{$prop} {
    #{$prop}: spacing.get();
  }
  .no-#{$prop} {
    #{$prop}: 0 !important;
  }

  .#{$prop}-x {
    #{$prop}-left: spacing.get() !important;
    #{$prop}-right: spacing.get() !important;
  }

  .#{$prop}-y {
    #{$prop}-top: spacing.get() !important;
    #{$prop}-bottom: spacing.get() !important;
  }

  // add space between all children on a given axis
  .#{$prop}-x-between {
    > * + * {
      #{$prop}-left: spacing.get();
    }
  }

  .#{$prop}-y-between {
    > * + * {
      #{$prop}-top: spacing.get();
    }
  }

  @each $name, $length in spacing.$scale {
    @if $name != 'default' {
      .#{$prop}-#{$name} {
        #{$prop}: spacing.get($name) !important;
      }

      .#{$prop}-x-#{$name} {
        #{$prop}-left: spacing.get($name) !important;
        #{$prop}-right: spacing.get($name) !important;
      }

      .#{$prop}-y-#{$name} {
        #{$prop}-top: spacing.get($name) !important;
        #{$prop}-bottom: spacing.get($name) !important;
      }

      // add space between all children on a given axis
      .#{$prop}-x-between-#{$name} {
        > * + * {
          #{$prop}-left: spacing.get($name);
        }
      }

      .#{$prop}-y-between-#{$name} {
        > * + * {
          #{$prop}-top: spacing.get($name);
        }
      }
    }
  }

  @each $side in [left, right, top, bottom] {
    .#{$prop}-#{$side} {
      #{$prop}-#{$side}: spacing.get() !important;
    }
    .no-#{$prop}-#{$side} {
      #{$prop}-#{$side}: 0 !important;
    }

    @each $name, $length in spacing.$scale {
      @if $name != 'default' {
        .#{$prop}-#{$side}-#{$name} {
          #{$prop}-#{$side}: spacing.get($name) !important;
        }
      }
    }
  }
}

// Outside gutters
// -> opinionated class to set consistent, responsive outside padding on full-width containers
.padding-x-outside {
  padding-left: spacing.get(spacing.get-outside());
  padding-right: spacing.get(spacing.get-outside());

  @each $screen, $width in spacing.$outside {
    @if $screen != 'default' {
      @include breakpoints.query('>#{$screen}') {
        padding-left: spacing.get($width);
        padding-right: spacing.get($width);
      }
    }
  }
}

// --- Split gutters ---

// add uniform gutters to a group of elements
.gutter-wrapper {
  padding: spacing.get($split: true);
  margin: -(spacing.get());

  .gutter {
    padding: spacing.get($split: true);
  }
}

@each $name, $size in spacing.$scale {
  @if $name != 'default' {
    .gutter-wrapper.gutter-#{$name} {
      padding: spacing.get($name, $split: true);
      margin: -(spacing.get($name));

      .gutter {
        padding: spacing.get($name, $split: true);
      }
    }
  }
}
