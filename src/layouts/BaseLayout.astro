---
// assets
import '@styles/base/reset.css';
import '@styles/base/type.css';
import '@styles/tokens/borders.css';
import '@styles/tokens/color.css';

import ColorTheme from '@components/meta/ColorTheme.astro';

// types
import type {
	CSSVariable,
	HexColor,
	HSLAColor,
	HSLColor,
} from '@lib/types';

import type { Theme } from '@components/meta/ColorTheme.astro';

import type { SEOContent, ThemeNames } from '@lib/types';
import Head from '@components/meta/Head.astro';

export interface Props {
	overlayNav?: boolean;
	pageTitle?: string;
	path?: string;
	seo?: SEOContent;
	theme?: Partial<Theme> | ThemeNames;
}

export type ThemeToken = HexColor | HSLColor | HSLAColor | CSSVariable;

// props and data
const {
	pageTitle,
	seo = {},
	theme,
} = Astro.props as Props;

// create a color theme object for the Theme component
function setTheme(): Partial<Theme> {
	if (theme) {
		if (typeof theme === 'string') return { name: theme };
		return theme;
	}
}
---

<script>
	// Add data attributes to the body element to confirm JS, touch, etc. is available
	// -> used by the CSS for styling JS-dependent elements
	let featureData = ['js'];
	if ("ontouchstart" in document.body) featureData.push('touch');

	// Add a data attribute for each supported feature
	document.body.dataset['supports'] = featureData.join(' ');
</script>

<html lang="en">
	<Head title={seo?.title || pageTitle} {...seo} />
	<ColorTheme theme={setTheme()} el="body">
		<slot />
	</ColorTheme>
</html>

<style is:global>
	html {
		/* make anchor links scroll smoothly */
		scroll-behavior: smooth;
	}

	body {
		background-color: var(--color-surface);
		color: var(--color-primary);
		position: relative;
		display: flex;
		flex-direction: column;

		/*
		 * several versions of 'full height of window' depending on context/support
		 * -> https://web.dev/viewport-units/
		 */
		min-height: 100vh;
		min-height: 100dvh;
	}
</style>
