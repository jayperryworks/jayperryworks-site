---
// assets
import '@styles/base/reset.css';
import '@styles/base/type.css';
import '@styles/tokens/color.css';

// utilities
import { convertHexToHSL } from '@lib/colorHelpers';

// components
import MainNav from '@components/navigation/MainNav.astro';
import MainFooter from '@components/navigation/MainFooter.astro';

// types
import { HexColor } from '@lib/types';

export type Theme = {
	bg?: HexColor;
	border?: HexColor;
	highlight?: HexColor;
	primary?: HexColor;
	secondary?: HexColor;
	shadow?: HexColor;
};

export interface Props {
	pageTitle?: string;
	path?: string;
	headerOverlay?: boolean;
	theme?: Theme;
};

const {
	pageTitle,
	headerOverlay = false,
	path = 'home',
	theme,
} = Astro.props as Props;

const SITE_TITLE = 'Jay Perry';
const title = pageTitle ? `${SITE_TITLE} | ${pageTitle}` : SITE_TITLE;

const roles = [
	'bg',
	'border',
	'highlight',
	'primary',
	'secondary',
	'shadow',
];

// if a theme has been passed in, replace the default color tokens with the theme values
const pageTheme = theme
	? roles.reduce((result, role) => {
		if (theme[role]) {
			result[`color-${role}`] = convertHexToHSL(theme[role]);
			return result;
		}
		return result;
	}, {})
	: null;
---

<html lang="en" class="no-js no-touch">
	<head>
		<meta charset='utf-8'>
		<meta name='viewport' content='width=device-width,initial-scale=1.0'>
		<title>{title}</title>
		<script>
			// Add a class to the html element to confirm JS is available
			// -> used by the CSS for styling JS-dependent elements
			let featureClasses = ['js'];
			// Add a class if the browser/device supports touch
			if ("ontouchstart" in document.documentElement) featureClasses.push('touch');
			document.documentElement.className = featureClasses.join(' ');
		</script>
	</head>

	<body>
		<MainNav segment={path} overlay={headerOverlay} />
		<main>
			<slot />
		</main>
		<MainFooter class="footer" />
	</body>
</html>

<!-- set the page theme as root custom properties to override the default tokens -->
<style define:vars={pageTheme} is:global></style>

<style>
	body {
		background-color: var(--color-bg);
		color: var(--color-primary);
		display: grid;
		flex-direction: column;
		grid-template-rows: auto 1fr auto;
		min-height: 100vh;
	}
</style>
