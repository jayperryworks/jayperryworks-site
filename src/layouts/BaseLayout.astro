---
// assets
import '@styles/base/reset.css';
import '@styles/base/type.css';
import '@styles/tokens/borders.css';
import '@styles/tokens/color.css';

// types
import type {
	ColorRoles,
	CSSVariable,
	HexColor,
	HSLAColor,
	HSLColor,
	Theme,
} from '@lib/types';

import type { SEOContent, ThemeNames } from '@lib/types';

export interface Props {
	overlayNav?: boolean;
	pageTitle?: string;
	path?: string;
	seo?: SEOContent;
	theme?: Partial<Theme> | ThemeNames;
}

export type ThemeToken = HexColor | HSLColor | HSLAColor | CSSVariable;

// props and data
const {
	pageTitle,
	seo = {},
	theme,
} = Astro.props as Props;

const SITE_TITLE = 'Jay Perry';
const title = pageTitle ? `${SITE_TITLE} | ${pageTitle}` : SITE_TITLE;
// const canonicalURL = `${import.meta.env.SITE.slice(0, -1)}${}`;

// if a theme has been passed in, replace the default color tokens with the theme values
function themeReducer(result: string[], role: ColorRoles) {
	if (theme[role]) {
		// stopgap: make sure the role passed is 'surface'
		// - 'bg' token is deprecated
		result.push(`--color-${role === 'bg' ? 'surface' : role}: ${theme[role]};`);
	};
	return result;
}

// create CSS variables for the color theme
// - either the hue color of a default theme, or custom roles
function setThemeStyle(): string {
	if (theme) {
		if (typeof theme === 'string') {
			return `--key-h: var(--brand-${theme}-h)`;
		}

		return Object.keys(theme).reduce(themeReducer, []).join(' ');
	}

	return '';
}

const styleList = [
	setThemeStyle(),
].join(' ');

const RSSMetadata = [
	{
		path: '/rss/feed.xml',
	},
	{
		name: 'Blog posts',
		path: '/rss/blog.xml',
	},
	{
		name: 'Pictures',
		path: '/rss/pictures.xml',
	},
];
---

<script>
	// Add data attributes to the body element to confirm JS, touch, etc. is available
	// -> used by the CSS for styling JS-dependent elements
	let featureData = ['js'];
	if ("ontouchstart" in document.body) featureData.push('touch');

	// Add a data attribute for each supported feature
	document.body.dataset['supports'] = featureData.join(' ');
</script>

<html lang="en">
	<head>
		<meta charset='utf-8'>
		<meta name='viewport' content='width=device-width, initial-scale=1.0'>

		<title>{title}</title>

		<!-- favicon -->
		<link rel="icon" hDOMRef="/favicon.ico" sizes="any">
		<link rel="icon" hDOMRef="/icon.svg" type="image/svg+xml">
		<link rel="apple-touch-icon" hDOMRef="/apple-touch-icon.png">
		<link rel="manifest" hDOMRef="/manifest.webmanifest">

		<!-- RSS metadata -->
		{RSSMetadata.map(({ name, path }) => (
			<link
				rel="alternate"
				type="application/rss+xml"
				title={[name ? `${SITE_TITLE}: ${name}` : SITE_TITLE]}
				href={new URL(path, Astro.site)}
			>
		))}

		<!-- microdata/profile -->
		<link rel="author" href="/about/" title="My story">
		<link rel="me" href="mailto:hi@jayperryworks.com">

		<!-- social/seo markup -->
		<!-- hat tip to https://meiert.com/en/blog/minimal-social-markup/ -->
		<meta name="twitter:card" content={seo.image ? 'summary_large_image' : 'summary'}>
		<meta property="og:title" content={seo.title || title}>
		<meta property="og:site_name" content={SITE_TITLE}>
		<meta property="og:url" content={new URL(Astro.url.pathname, Astro.site)}>
		<meta property="og:locale" content="en_US">
		<meta property="og:author" name="author" content="Jay Perry">
		{seo.description && (
			<meta property="og:description" name="description" content={seo.description}>
		)}
		{seo.image && (
			<meta property="og:image" content={seo.image}>
			<meta property="og:image:alt" content={seo.imageAlt}>
		)}
		{/* <meta name="theme-color" content={}> */}
	</head>

	<body style={styleList}>
		<slot />
	</body>
</html>

<style>
	html {
		/* make anchor links scroll smoothly */
		scroll-behavior: smooth;
	}

	body {
		background-color: var(--color-surface);
		color: var(--color-primary);
		position: relative;
		display: flex;
		flex-direction: column;

		/*
		 * several versions of 'full height of window' depending on context/support
		 * -> https://web.dev/viewport-units/
		 */
		min-height: 100vh;
		min-height: 100dvh;
	}
</style>
