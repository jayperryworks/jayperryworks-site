---
// --- assets
import '@styles/tokens/color.css';
import '@styles/tokens/contentWidth.css';
import '@styles/tokens/spacing.css';
import '@styles/utilities/type.css';
import externalLink from '@icons/external-link.svg?raw';

// --- utils
import * as prismicHelpers from '@prismicio/helpers';
import prismic from '@lib/prismic';

// --- components
import Image from '@components/elements/Image.astro';
import Icon from '@components/elements/Icon.astro';
import Heading from '@components/blocks/Heading.astro';
import Gallery from '@components/layout/Gallery.astro';
import DataGrid from '@components/layout/DataGrid.astro';
import RevealOnScroll from '@components/layout/RevealOnScroll.astro';

// --- layout
import Layout from '@layouts/BaseLayout.astro';
import Passage from '@components/blocks/Passage.astro';

const pageData = await prismic.getByUID('index_page', 'bookshelf');

// console.log(pageData);

const {
	seo_description,
	seo_image,
	seo_title,
	title,
	subtitle,
	short_title: shortTitle,
} = pageData.data;

const seo = {
	description: seo_description,
	image: seo_image?.url,
	imageAlt: seo_image?.alt,
	title: seo_title || prismicHelpers.asText(title),
};

const booksResponse = await prismic.getAllByType('book', {
	orderings: {
		field: 'my.book.date_started',
		direction: 'desc',
	},
});

// https://covers.openlibrary.org/b/id/11403183.jpg
// https://covers.openlibrary.org/b/id/8739161.jpg
// https://covers.openlibrary.org/b/id/12835209.jpg

let books = await Promise.all(booksResponse.map(async ({
	uid,
	tags,
	data,
}) => {
	const {
		author,
		purchase_url: purchaseURL,
		related_content: relatedContent,
		title,
		read_date: readDate,
		isbn,
	} = data;

	let publishDate, publisher, cover, infoURL;

	if (isbn) {
		const queryParams = {
			bibkeys: `ISBN:${isbn}`,
			format: 'json',
			jscmd: 'data',
		}
		const queryString = Object.keys(queryParams)
			.map((key) => `${key}=${queryParams[key]}`)
			.join('&');

		console.log(queryString);

		const openLibraryResponse = await fetch(`http://openlibrary.org/api/books?${queryString}`);
		const openLibraryData = await openLibraryResponse.json();

		const {
			publish_date,
			publishers,
			cover: coverList,
			url,
		} = openLibraryData[queryParams.bibkeys];



		publishDate = publish_date;
		cover = coverList;
		infoURL = url;

		publisher = publishers?.length > 0
			&& publishers.map(({ name }) => name).join(', ');
	}

	return {
		urls: {
			info: infoURL,
			purchase: purchaseURL,
		},
		author,
		cover,
		publishDate,
		publisher,
		readDate,
		relatedContent,
		tags,
		title,
		uid,
	}
}));
---

<Layout
	pageTitle={shortTitle}
	path="bookshelf"
	{seo}
>
	<RevealOnScroll
		class="title"
		tag="header"
	>
		<Heading
			level={1}
			text={title}
		/>
		{subtitle && (
			<Heading
				level={4}
				text={subtitle}
				subheading
			/>
		)}
	</RevealOnScroll>

	<div class="wrapper">
		<Gallery gutter="wide">
			{books.map((book) => (
				<RevealOnScroll
					tag="li"
					class="item"
				>
					<article
						class="book"
						id={book.uid}
						data-tags={book.tags.join(' ')}
						data-read={book.readDate}
					>
						<img src={book?.cover?.large}>
						<!-- <Image
							fit="contain"
							source={book.cover}
							class="cover-image"
							aspectRatio="1 / 1"
						/> -->
						<header>
							<Heading
								class="type-scale-delta"
								level={2}
								text={book.title}
							/>
							<Heading
								level={5}
								subheading
							>
								{book.author}
							</Heading>
						</header>

						{book.publisher && (
							<div class="metadata">
								<p class="type-role-accent color-secondary">
									{[book.publisher, book.publishDate].join(', ')}
								</p>
							</div>
						)}

						<footer class="actions">
							<a
								class="type-role-accent"
								href={prismicHelpers.asLink(book.urls.purchase)}
								target="_blank"
							>
								Purchase
								<Icon
									size="small"
									margin="left"
									svg={externalLink}
								/>
							</a>
							{book.urls.info && (
								<a
									class="type-role-accent"
									href={book.urls.info}
									target="_blank"
								>
									Open Library
									<Icon
										size="small"
										margin="left"
										svg={externalLink}
									/>
								</a>
							)}
						</footer>
					</article>
				</RevealOnScroll>
			))}
		</Gallery>
	</div>
</Layout>

<style>
	.title,
	.wrapper {
		margin-inline: auto;
		padding-block-start: var(--space-xwide);
		padding-inline: var(--space-outside);
	}

	.title {
		max-width: var(--content-width-wide);
	}

	.wrapper {
		max-width: var(--content-width-xxwide);
		padding-block-end: var(--space-xwide);
	}

	.item {
		display: flex;
		flex-direction: column;
		gap: var(--space-narrow);
	}

	.book {
		display: flex;
		flex-direction: column;
		flex: 1;
		gap: var(--space-narrow);
	}

	figcaption {
		flex: 1;
		display: flex;
		flex-direction: column;
	}

	.cover-image {
		display: block;
		height: auto !important;
		text-decoration: none;
	}

	.metadata {
		color: var(--color-secondary);
	}

	.actions {
		align-items: flex-end;
		display: flex;
		flex-direction: row;
		flex: 1;
		gap: var(--space-narrow);
	}
</style>
