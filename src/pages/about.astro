---
import Layout from '../layouts/BaseLayout.astro';
import Block from '../components/Block.svelte';

import * as prismic from '@prismicio/client';
import * as prismicHelpers from '@prismicio/helpers';

const endpoint: string = prismic.getEndpoint('jpw-api');
const accessToken: string = import.meta.env.PRISMIC_TOKEN.toString();
const client = prismic.createClient(endpoint, { accessToken });

// YbDuIRUAADEAj-if

const response = await client.getByID('YbDuIRUAADEAj-if');

let { title, body } = response.data;

function figure ({ primary }, options = {}) {
	const { sizes = [ 800, 1200, 2000 ] } = options;
	const { image } = primary;
	const aspect = image.dimensions.width / image.dimensions.height;
	const sources = sizes.map((size) => {
		return {
			path: prismicHelpers.asImageSrc(image, {
					width: size,
					fit: 'max'
				}),
			width: size,
			height: size / aspect
		};
	});

	return {
		type: 'figure',
		sources,
		alt: image.alt
	};
}

const blockTypes = {
	figure
};

const blockList = body.reduce((result, block) => {
	const { slice_type } = block;
	if (blockTypes[slice_type]) {
		result.push(blockTypes[slice_type](block));
	}
	return result;
}, []);

console.log(blockList)
---

<Layout pageTitle="article" path="article">
	<article>
  	<header>
			<h1>{prismicHelpers.asText(title)}</h1>
		</header>
	</article>
  <main class="padding-y-flow-wide padding-y-xwide">
    {blockList.map(block => <Block {block} />)}
  </main>
</Layout>

<style>
  article {
    padding-block: var(--space-xwide);
    padding-inline: var(--space-outside);
  }

	article > :global(* + *) {
		padding-block-start: var(--space-wide);
	}
</style>
