---
import '@styles/utilities/borders.css';
// helpers
import prismic from '@lib/prismic.ts';
import prismicHelpers from '@prismicio/helpers';
import { format } from 'date-fns';

// components
import Layout from '@layouts/BaseLayout.astro';
import BlockList from '@components/BlockList.astro';
import ContentWrapper from '@components/ContentWrapper.astro';

// types
import type { Slice, TitleField, LinkField, Tags } from '@prismicio/types';

export interface Params {
	year: string,
	month: string,
	day: string,
	uid: string,
}

export interface Props {
	body: Array<Slice>,
	date: string,
	link: LinkField,
	next: string,
	prev: string,
	series: LinkField,
	subtitle: TitleField,
	tags: Tags,
	title: TitleField,
}

export async function getStaticPaths({ paginate }) {
	const posts = await prismic.getAllByType('blog_post', {
		orderings: {
			field: 'my.blog_post.date',
			direction: 'desc',
		},
	});

	return posts.map(({ uid, tags, data }, index) => {
		const { date } = data;

		// create urls for next and previous blog posts
		const nav = [
			posts[index - 1],
			posts[index + 1],
		].map((post) => {
			if (post) {
				const { data, uid } = post;
				const year = format(new Date(data.date), 'yyyy');
				const month = format(new Date(data.date), 'MM');
				const day = format(new Date(data.date), 'dd');

				return `/blog/${year}/${month}/${day}/${uid}`;
			}
		});

		return {
			params: {
				year: format(new Date(date), 'yyyy'),
				month: format(new Date(date), 'MM'),
				day: format(new Date(date), 'dd'),
				uid,
			},
			props: {
				tags,
				...data,
				prev: nav[0],
				next: nav[1],
			}
		}
	});
}

const {
	year,
	month,
	day,
	uid,
} = Astro.params as Params;

const {
	body,
	date,
	link,
	next,
	prev,
	series,
	subtitle,
	tags,
	title,
} = Astro.props as Props;

console.log(prev, next)
---

<Layout
	pageTitle={prismicHelpers.asText(title)}
	path="blog"
>
	<article>
		<header>
			<h1>{prismicHelpers.asText(title)}</h1>
			{subtitle && (
				<p class="subtitle">{prismicHelpers.asText(subtitle)}</p>
			)}
			<time datetime={date} class="date">
				{format(new Date(date), 'MMMM dd, yyyy')}
			</time>
		</header>
		<BlockList {body} />
	</article>

	<nav class="border-seam-top">
		{prev && <a href={prev}>Previous</a>}
		{next && <a href={next}>Next</a>}
	</nav>
</Layout>

<style>
  article {
    padding-block: var(--space-xwide);
    padding-inline: var(--space-outside);
	}

	header {
		text-align: center;
		padding-block-end: var(--space-wide);
	}

	.subtitle {
		font-family: var(--type-font-accent);
		font-size: var(--type-scale-gamma);
		font-weight: 100;
		max-width: none;
		color: var(--color-secondary);
		padding-top: var(--space-xxnarrow);
	}

	.date {
		color: var(--color-secondary);
		display: block;
		font-family: var(--type-font-accent);
		font-weight: 200;
		padding-block-start: var(--space-narrow);
	}

	nav {
		padding-block-start: var(--space-xwide);
	}
</style>
