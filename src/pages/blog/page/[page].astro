---
// styles & assets
import '@styles/utilities/borders.css';
import '@styles/components/bookend.css';
import arrowLeft from '@icons/arrow-left.svg?raw';
import arrowRight from '@icons/arrow-right.svg?raw';
import externalLink from '@icons/external-link.svg?raw';

// helpers
import prismic from '@lib/prismic.ts';
import prismicHelpers from '@prismicio/helpers';
import { format } from 'date-fns';

// components
import BlockList from '@components/BlockList.astro';
import Button from '@components/elements/Button.astro';
import Icon from '@components/elements/Icon.astro';
import NextPrevNav from '@components/navigation/NextPrevNav.astro';
import Layout from '@layouts/BaseLayout.astro';

export async function getStaticPaths({ paginate }): Promise<Function> {
	const posts = await prismic.getAllByType('blog_post', {
		orderings: {
			field: 'my.blog_post.date',
			direction: 'desc',
		},
	});

	return paginate(posts, { pageSize: 10 });
}

const {
	page
} = Astro.props;

const { next, prev } = page.url;

const postSummaryList = page.data.map(({ uid, tags, data }) => {
	// find the slices in each post marked as "include in excerpt"
	const summary = data.body.filter(({ primary }) => primary.include_in_excerpt);

	if (summary.length > 0) {
		return {
			...data,
			summary,
			tags,
			uid,
			link: prismicHelpers.asLink(data.link),
			path: `/blog/${format(new Date(data.date), 'yyyy')}/${format(new Date(data.date), 'MM')}/${format(new Date(data.date), 'dd')}/${uid}`,
			readMore: summary.length < data.body.length,
		};
	}

	throw new Error(`Post missing a summary: ${prismicHelpers.asText(data.title)}, ${data.date}`);
});
---

<Layout
	path="blog"
	pageTitle="Blog"
>
	<ul class="post-list">
		{postSummaryList.map((post, index) => (
			<li class={index > 0 ? 'border-seam-top' : ''}>
				<article
					class="post"
					id={post.uid}
				>
					<header class="post-header">
						<h2><a href={post.path}>{prismicHelpers.asText(post.title)}</a></h2>
						<time
							datetime={post.date}
							class="date"
						>
							{format(new Date(post.date), 'MMMM dd, yyyy')}
						</time>
					</header>
					<BlockList body={post.summary} />
					{(post.readMore || post.link) && (
						<footer class="post-footer">
							{post.readMore && (
								<Button
									href={post.path}
									iconRight={arrowRight}
								>
									Read more
								</Button>
							)}
							{post.link && (
								<Button
									href={post.link}
									iconRight={externalLink}
								>
									Direct link
								</Button>
							)}
						</footer>
					)}
				</article>
			</li>
		))}
	</ul>

	<nav class="border-seam-top">
		<ul class="bookend justify-end">
			{prev && (
				<li class="bookend-item">
					<a
						class="nav-link"
						href={prev}
					>
						<Icon svg={arrowLeft} margin="right" />
						Newer posts
					</a>
				</li>
			)}
			{next && (
				<li class="bookend-item">
					<a
						class="nav-link"
						href={next}
					>
						Older posts
						<Icon svg={arrowRight} margin="left" />
					</a>
				</li>
			)}
		</ul>
	</nav>
</Layout>


<style>
	.post-list {
		list-style: none;
		display: block;
		padding-inline-start: 0;
		padding-block: var(--space-xwide);
	}

	.post-list > li + li {
		margin-block-start: var(--space-xwide);
		padding-block-start: var(--space-xwide);
	}

	.post {
		padding-inline: var(--space-outside);
	}

	.post-header {
		margin-inline: auto;
		max-width: var(--content-width-xwide);
		padding-block-end: var(--space-wide);
		text-align: center;
	}

	.post-link {
		border-block-end: var(--border-default);
		margin-inline: auto;
		max-width: var(--content-width-default);
		padding-block-end: var(--space-medium);
		padding-block-start: var(--space-wide);
		text-align: start;
	}

	.post-footer {
		display: flex;
		flex-wrap: wrap;
		gap: var(--space-narrow);
		justify-content: space-between;
		margin-inline: auto;
		max-width: var(--content-width-default);
		padding-block-start: var(--space-wide);
	}

	.date {
		color: var(--color-secondary);
		display: block;
		font-family: var(--type-font-accent);
		font-weight: 200;
		padding-block-start: var(--space-xnarrow);
	}

	nav {
		padding-block: var(--space-wide);
		padding-inline: var(--space-outside);
	}

	.nav-link {
		border: 0;
		font-size: var(--type-scale-gamma);
	}
</style>
