---
/**
 * Sticky note gallery block component
 * - display short passages of text in a grid of cards
 *
 * @param {StickyNote} notes - the items to display
 * @param {TitleField} [title] - optional heading to display
 * @param {FormattedText} [description] - optional descriptive blurb
 * @param {boolean} [shadow] - display shadows under the cards
 * @param {TitleField} [subtitle] - optional subheading to display
 */
// assets
import '@styles/tokens/elevation.css';
import '@styles/tokens/spacing.css';
import '@styles/utilities/type.css';

// utilities
import * as prismicHelpers from '@prismicio/helpers';

// components
import Gallery from '@components/layout/Gallery.astro';
import Passage from '@components/blocks/Passage.astro';
import Heading from '@components/blocks/Heading.astro';
import RevealOnScroll from '@components/layout/RevealOnScroll.astro';

// types
import {
	FormattedText,
	StickyNote,
} from '@lib/types';

import { TitleField } from '@prismicio/types';
import RenderedText from '@components/elements/RenderedText.astro';

const {
	notes,
	class: className,
	title,
	description,
	shadow,
	subtitle,
} = Astro.props;

const classList = [
	'sticky-note-gallery',
	className,
].join(' ');
---

<section class={classList}>
	{prismicHelpers.isFilled.title(title) && (
		<Heading
			level={2}
			text={title}
		/>
	)}
	{prismicHelpers.isFilled.title(subtitle) && (
		<Heading
			level={4}
			text={subtitle}
			subheading
		/>
	)}
	{prismicHelpers.isFilled.richText(description) && (
		<Passage text={description} />
	)}
	<Gallery gutter="narrow">
		{notes.map(({ shortStatement, extendedStatement }) => (
			<li class={['sticky-note-item', shadow ? 'shadow' : ''].join(' ')}>
				<RevealOnScroll
					class="sticky-note-text | type-role-accent type-scale-epsilon"
					tag="p"
				>
					<strong><RenderedText markdown={shortStatement} inline={true} /></strong>
					{extendedStatement && (
						<RenderedText markdown={extendedStatement} inline={true} />
					)}
				</RevealOnScroll>
			</li>
		))}
	</Gallery>
</section>

<style>
	:global(.slide) .sticky-note-gallery {
		padding-block: var(--space-xwide);
	}

	.sticky-note-gallery {
		display: flex;
		flex-direction: column;
		gap: var(--space-medium);
	}

	.sticky-note-item {
		background-color: var(--color-island);
		border-radius: var(--border-radius);
		padding: var(--space-medium);
	}

	.sticky-note-item.shadow {
		box-shadow: var(--elevation-low);
	}

	.sticky-note-item :global(p) {
		text-wrap: balance;
	}
</style>
