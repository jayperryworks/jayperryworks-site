---
// utilities
import * as prismicHelpers from '@prismicio/helpers';

// components
import Gallery from '@components/layout/Gallery.astro';
import Passage from '@components/blocks/Passage.astro';
import Heading from '@components/blocks/Heading.astro';
import RenderedText from '@components/elements/RenderedText.astro';

// types
import {
	FormattedText,
	StickyNote,
} from '@lib/types';

import { TitleField } from '@prismicio/types';

export interface Props {
	description: FormattedText,
	subtitle: TitleField,
	title: TitleField,
	notes: StickyNote[],
}

const {
	notes,
	description,
	subtitle,
	title,
} = Astro.props as Props;
---

<section class="sticky-note-gallery">
	<Heading
		level={2}
		text={title}
	/>
	{prismicHelpers.isFilled.title(subtitle) && (
		<Heading
			level={4}
			text={subtitle}
			subheading
		/>
	)}
	{description && (
		<Passage text={description} />
	)}
	<Gallery size="large" gutter="medium">
		{notes.map((note) => (
			<li class="sticky-note-item | type-role-accent type-scale-delta">
				<RenderedText prismicText={note.short_statement} /> <RenderedText prismicText={note.extended_statement} />
			</li>
		))}
	</Gallery>
</section>

<style>
	:global(.block.slide) .sticky-note-gallery {
		padding-block: var(--space-xwide);
	}

	.sticky-note-gallery {
		display: flex;
		flex-direction: column;
		gap: var(--space-medium);
	}

	.sticky-note-item {
		box-shadow: 0 0.15em 0.5em var(--color-shadow);
		background-color: var(--color-island);
		/* border: var(--border-solid); */
		border-radius: var(--border-radius);
		padding: var(--space-medium);
	}
</style>
