---
// assets
import '@styles/tokens/color.css';
import '@styles/tokens/spacing.css';
import '@styles/utilities/visibility.css';

// utilities
import * as prismicHelpers from '@prismicio/helpers';

// types
import type { ColorRoles, FormattedText } from '@lib/types';
import type { ImageField } from '@prismicio/types';

// components
import Passage from '@components/blocks/Passage.astro';
import RevealOnScroll from '@components/layout/RevealOnScroll.astro';

export interface Props {
	text: FormattedText;
	class?: string;
	color?: ColorRoles;
	image?: ImageField;
}

const {
	text,
	class: className = '',
	image,
	color = 'primary',
} = Astro.props as Props;

function imageVersion(size: number): string {
	return prismicHelpers.asImageSrc(image, {
		fit: 'max',
		w: size,
	});
}

function variables(): string {
	if (image) {
		const { width, height } = image.dimensions;

		return [
			`--aspect: ${width} / ${height};`,
			`--color: var(--color-${color});`,
			`--image-small: url('${imageVersion(800)}');`,
			`--image-medium: url('${imageVersion(1600)}');`,
			`--image-large: url('${imageVersion(2400)}');`,
		].join('');
	}

	return '';
}
---

<RevealOnScroll>
	<aside
		aria-role="presentation"
		class={className}
		style={variables()}
	>
		<Passage {text} typeSize="delta" class={image ? 'hide-visually' : ''} />
	</aside>
</RevealOnScroll>

<style>
	aside {
		--image: var(--image-small);

		aspect-ratio: var(--aspect);
		background-color: var(--color, currentColor);
		mask-image: var(--image);
		mask-position: 50% 50%;
		mask-repeat: no-repeat;
		mask-size: contain;
	}

	@media screen and (min-width: 37em) {
		aside {
			--image: var(--image-medium);
		}
	}

	@media screen and (min-width: 100em) {
		aside {
			--image: var(--image-large);
		}
	}
</style>
