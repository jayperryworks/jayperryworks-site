---
/**
 * Video block component
 * - Display an embedded PeerTube video
 *
 * @param {string} id - ID string for the video on PeerTube
 * @param {string} title - title for the video from PeerTube
 * @param {string} [aspectRatio='16 / 9'] - aspect ratio of the container
 * @param {FormattedText} [attribution] - optional credit
 * @param {boolean} [border] - show a border around the container
 * @param {FormattedText} [caption] - optional caption
 * @param {string} [class] - classes to append to the container
 */
// assets
import '@styles/tokens/borders.css';

// utilities
import { arrayToPunctatedString } from '@lib/stringHelpers';

// components
import Figure from '@components/blocks/Figure.astro';

// types
import { FormattedText } from '@lib/types';

const {
	id,
	title,
	aspectRatio = '16 / 9',
	attribution,
	border,
	caption,
	class: className,
} = Astro.props;

const src = `https://tube.tchncs.de/videos/embed/${id}?title=0&warningTitle=0&peertubeLink=0&p2p=0`;

const classList = [
	'video',
	'aspect',
	border ? 'border' : '',
].join(' ');

const styleList = arrayToPunctatedString([
	aspectRatio && `--aspect-ratio: ${aspectRatio}`,
]);
---

<Figure
	class={className}
	{attribution}
	{caption}
>
	<div
		class={classList}
		style={styleList}
	>
		<iframe
			{title}
			{src}
			width="560"
			height="315"
			frameborder="0"
			sandbox="allow-same-origin allow-scripts allow-popups"
			allowfullscreen
		>
		</iframe>
	</div>
</Figure>

<style>
	:global(.video.aspect) {
		aspect-ratio: var(--aspect-ratio, auto);
		max-width: 100%;
		position: relative;
	}

	:global(.video.border) {
		border: var(--border-solid);
	}

	iframe {
		border: none;
		bottom: 0;
		display: block;
		height: 100%;
		left: 0;
		position: absolute;
		right: 0;
		top: 0;
		width: 100%;
	}
</style>
