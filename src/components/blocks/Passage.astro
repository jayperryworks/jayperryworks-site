---
// assets
import '@styles/tokens/type.css';

// components
import RenderedText from '@components/elements/RenderedText.astro';

// types
import type { TypeScale, FormattedText } from '@lib/types';

export interface Props {
	text: FormattedText;
	class?: string;
	typeSize?: TypeScale;
}

const {
	text,
	class: className = '',
	typeSize = 'epsilon',
} = Astro.props as Props;
---

<div
	class={`prose | ${className}`}
	style={`--type-size: var(--type-scale-${typeSize});`}
>
	<slot><RenderedText {...text} /></slot>
</div>

<style>
	.prose {
		font-size: var(--type-size);
	}

  .prose :global(* + *) {
    margin-top: 1em;
  }

	/* add an icon after external links */
	@supports (mask: url('/assets/icons/external-link.svg') no-repeat 50% 50%) {
		.prose :global(a[href^='http']::after) {
			--size: 0.7em;

			background-color: currentColor;
			content: '';
			display: inline-block;
			height: var(--size);
			margin: 0 0.1em 0 0.25em;
			mask: url('/assets/icons/external-link.svg') no-repeat 50% 50%;
			position: relative;
			vertical-align: baseline;
			width: var(--size);
		}
	}
</style>
