---
	// styles
	import '@styles/tokens/borders.css';
	import '@styles/tokens/spacing.css';
	import '@styles/tokens/type.css';
	import '@styles/tokens/color.css';

	// components
	import Heading from '@components/blocks/Heading.astro';
	import Passage from '@components/blocks/Passage.astro';

	// types
	import { KeyTextField } from '@prismicio/types';
	import type { FormattedText, TypeScale } from '@lib/types';

	export interface Props {
		text: FormattedText;
		border?: boolean;
		class?: string;
		label?: KeyTextField;
		typeSize?: 'Default' | 'Small';
	}

	const {
		text,
		class: className = '',
		label,
		typeSize = 'Default',
	} = Astro.props as Props;

	const typeScale = {
		Default: 'epsilon',
		Small: 'zeta',
	};

	const classList = [
		'aside',
		className,
	].join(' ');
---

<aside class={classList}>
	{label && (
		<Heading
			class="type-scale-epsilon"
			level={2}
		>
			{label}
		</Heading>
	)}
	<Passage
		{text}
		class="text"
		typeSize={typeScale[typeSize] as TypeScale}
		typeFace="accent"
	/>
</aside>

<style>
	.aside {
		background-color: var(--color-well);
		border-radius: var(--border-radius-round);
		color: var(--color-secondary);
		display: flex;
		flex-direction: column;
		padding: var(--space-medium);
	}

	.aside :global(.text) {
		font-style: italic;
	}
</style>
