---
/**
 * Aside block component
 * - display a note or callout with text
 *
 * @param {FormattedText} text - the text content
 * @param {string} [class] - append classes to the container
 * @param {KeyTextField} [label] - optional label, e.g. 'note'
 * @param {boolean} [margins] - display outside margins
 * @param {'Default' | 'Small'} [typeSize='Default'] - size of the body text
 */

// --- styles ---
import '@styles/tokens/borders.css';
import '@styles/tokens/spacing.css';
import '@styles/tokens/type.css';
import '@styles/utilities/contentWidth.css';

// --- components ---
import Heading from '@components/blocks/Heading.astro';
import Passage from '@components/blocks/Passage.astro';

// --- types ---
import { KeyTextField } from '@prismicio/types';
import type { FormattedText } from '@lib/types';

// --- props ---
const {
	text,
	class: className,
	label,
	margins,
	typeSize = 'Default',
} = Astro.props;

const typeScale = {
	Default: 'epsilon',
	Small: 'zeta',
};

const classList = [
	'aside',
	margins ? 'space-outside-margins' : '',
	className,
].join(' ');
---

<aside class={classList}>
	<div class="wrapper content-width centered">
		{label && (
			<Heading
				class="type-scale-epsilon"
				level={2}
			>
				{label}
			</Heading>
		)}
		<Passage
			{text}
			class="text"
			typeSize={typeScale[typeSize]}
			typeFace="accent"
		/>
	</div>
</aside>

<style>
	.wrapper {
		background-color: var(--color-well);
		border-radius: var(--border-radius-round);
		color: var(--color-secondary);
		display: flex;
		flex-direction: column;
		padding:  var(--space-medium);
	}

	.aside :global(.text) {
		font-style: italic;
	}
</style>
