---
/**
 * Block component
 * - wrapper for all content blocks, passes props through
 *
 * @param {Block} block - block props from Prismic
 */

// --- assets ---
import '@styles/tokens/contentWidth.css';

// --- components ---
import Aside from '@components/blocks/Aside.astro';
import Billboard from '@components/blocks/Billboard.astro';
import BlockQuote from '@components/blocks/BlockQuote.astro';
import Collage from '@components/blocks/Collage.astro';
import Feed from '@components/blocks/Feed.astro';
import Figure from '@components/blocks/Figure.astro';
import Heading from '@components/blocks/Heading.astro';
import ImageGallery from '@components/blocks/ImageGallery.astro';
import Passage from '@components/blocks/Passage.astro';
import Pullquote from '@components/blocks/Pullquote.astro';
import StickyNoteGallery from '@components/blocks/StickyNoteGallery.astro';
import Table from '@components/blocks/Table.astro';
import Video from '@components/blocks/Video.astro';
import ColorTransition from '@components/meta/ColorTransition.astro';

// --- types ---
import type { Block } from '@lib/types';

// --- props ---
const {
	block,
	class: className,
} = Astro.props;

/**
 * Match the 'prominence' value to the corresponding width token
 * @param {Block} block
 * @returns {string}
 */
function getWidth(block) {
	const widths = {
		Small: 'narrow',
		Large: 'xwide',
		XLarge: 'xxwide',
	};

	if (block.displayMode === 'slide') return widths['XLarge'];
	return widths[block.prominence] || '';
}

const displayModeClass = block.displayMode === 'slide' ? 'slide border-seam-top' : '';

const blocks = {
	aside: Aside,
	billboard: Billboard,
	quote: BlockQuote,
	collage: Collage,
	feed: Feed,
	figure: Figure,
	heading: Heading,
	imageGallery: ImageGallery,
	passage: Passage,
	pullquote: Pullquote,
	stickyNoteGrid: StickyNoteGallery,
	table: Table,
	video: Video,
};

const Component = blocks[block.type];
const classList = [
	'block',
	'space-outside-margins',
	displayModeClass,
	className,
].join(' ');
---

<ColorTransition
	class={classList}
	{...block.theme}
>
	<div class={`content-width centered ${getWidth(block)}`}>
		<Component {...block} />
	</div>
</ColorTransition>

<style>
	.block {
		background-color: var(--color-surface);
	}
</style>
