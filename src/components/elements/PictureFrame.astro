---
// assets
	import '@styles/tokens/color.css';

	// components
	import Image from '@components/elements/Image.astro';

	// types
	import type { ImageField } from '@prismicio/types';

	import type {
		CSSVariable,
		HexColor,
		HSLAColor,
		HSLColor,
	} from '@lib/types';

	export interface Props {
		source: ImageField,
		class?: string,
		el?: string,
		frameThickness: number,
		matteColor?: CSSVariable | HexColor | HSLColor | HSLAColor,
		matteThickness?: number,
		type?: 'frame' | 'panel',
	};

	const types = {
		frame: {
			matte: 7,
			border: 0.25,
		},
		panel: {
			matte: 0.2,
			border: 0.1,
		},
	};

	const {
		source,
		class: className,
		// put the 'type' prop first because 'frameThickness' and 'matteThickness' use its value for their defaults
		type = 'frame',
		frameThickness = types[type].border,
		matteThickness = types[type].matte,
		matteColor,
	} = Astro.props as Props;

	const classList = [
		'picture',
		type,
		className,
	].filter(i => i).join(' ');

	const styleList = [
		matteColor && `--matte-color: ${matteColor};`,
		`--frame-thickness: ${frameThickness}em`,
		`--matte-thickness: ${matteThickness}vmin`,
	].filter(i => i).join(';');
---

<Image
	class={classList}
	style={styleList}
	{source}
/>

<style is:global>
	.picture.frame,
	.picture.panel {
		--frame-color: var(--color-primary);
		--shadow-color: var(--color-shadow);
		--matte-color: var(--color-island, #fff);

		background-color: var(--matte-color);
		border: var(--frame-thickness) solid var(--frame-color);
		box-shadow: 0 0.25em 0.5em var(--color-shadow);
		padding: var(--matte-thickness);
		height: 100%;
	}

	.picture.panel {
		box-shadow: 0 0.7em 0.4em var(--color-shadow);
	}
</style>
