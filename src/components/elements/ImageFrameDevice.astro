---
// Add a frame around content that looks like a mobile device
// -> Phone, Tablet (horizontal and vertical)

// components
import Image from '@components/elements/Image.astro';

// types
import type { Frame } from '@lib/types';
import type { ImageField } from '@prismicio/types';

export interface Props {
	source: ImageField;
	darkModeSource?: ImageField;
	useImageAspectRatio?: boolean;
	class?: string;
	el?: string;
	maxHeight?: number;
	type?: Frame;
};

const {
	source,
	class: className = '',
	darkModeSource,
	el = 'div',
	maxHeight = 75,
	type = 'Tablet (landscape)',
	useImageAspectRatio = false,
} = Astro.props as Props;

const types = {
	'Phone': 'phone',
	'Tablet (landscape)': 'tablet-landscape',
	'Tablet (portrait)': 'tablet-portrait',
};

const El = el;

const classList = [
	'device-frame',
	types[type] || '',
	className,
].join(' ');

function calculateOuterAspectRatio(source) {
	const { width, height } = source.dimensions;
	const autoAspectX = width + (width * 0.035);
	const autoAspectY = height + (width * 0.11) + 16;
	return `${autoAspectX} / ${autoAspectY}`;
}
---

<El
	class={classList}
	style={[
		maxHeight ? `--max-height: ${maxHeight};` : '',
		useImageAspectRatio ? `--aspect-ratio: ${calculateOuterAspectRatio(source)};` : '',
	].join(' ')}
>
	<div class="wrapper">
		<slot>
			{source && <Image {source} {darkModeSource} />}
		</slot>
	</div>
</El>

<style>
	/*
		- only display the device frame if aspect-ratio supported
		- otherwise it will look super wonky
		- default/fallback is showing the image by itself
	*/
	@supports (aspect-ratio: 1/2) {
		.device-frame {
			/* use percentage units for the bezel and corners, so they scale fluidly with the image and aspect ratio */
			--aspect-ratio: 4/3;
			--bezel-radius: 4.5% / 6%;
			--bezel-width-x: 5%;
			--bezel-width-y: 5%;
			--screen-radius:  0.75% / 1%;

			aspect-ratio: var(--aspect-ratio);
			background-color: var(--color-island);
			border-radius: var(--bezel-radius);
			border: 1px solid var(--color-border);
			box-shadow: 0 0.125em 0.25em var(--color-shadow);
			display: flex;
			max-height: calc(var(--max-height) * 1vh);
			max-height: calc(var(--max-height) * 1svh);
			max-width: 100%;
			overflow: hidden;
			padding: var(--bezel-width-y) var(--bezel-width-x);
			position: relative;
		}

		.wrapper {
			/* set the inner aspect ratio and crop the image
			 * - Firefox bug distorts the image if we use object-fit and position here
			*/
			border-radius: var(--screen-radius);
			border: 1px solid var(--color-border);
			overflow: hidden;
		}

		@media screen and (min-width: 40em) {
			.device-frame {
				border-width: 2px;
			}
		}

		.device-frame.tablet-landscape {
			--aspect-ratio: 4/3;
			--screen-radius: 1%;
		}

		.device-frame.tablet-portrait {
			--aspect-ratio: 3/4;
			--bezel-radius: 6%;
		}

		.device-frame.phone {
			--aspect-ratio: 1/2.05;
			--bezel-radius: 10% / 5%;
			--bezel-width-x: 3.5%;
			--bezel-width-y: 11%;
			--screen-radius: 2% / 1%;

			box-shadow: var(--elevation-low);
		}
	}
</style>
