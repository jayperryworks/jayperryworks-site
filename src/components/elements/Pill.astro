---
/**
 * Pill component
 * @description - render a small, interactive, labeled button for e.g. filters or tags
 *
 * @param {string} [label] - the text label it displays
 * @param {Object[]} [data] - data attributes to attach to the element
 * @param {boolean} [toggled=false] - is the pill toggled?
 */

// --- assets ---
import '@styles/tokens/borders.css';
import '@styles/tokens/elevation.css';
import '@styles/tokens/spacing.css';
import '@styles/tokens/type.css';

// --- props ---
const { label, data, toggled = false, class: className } = Astro.props;

const classList = ['pill', className].join(' ').trim();

const dataAttrs = Object.keys(data).reduce((result, key) => {
	result[`data-${key}`] = data[key];
	return result;
}, {});
---

<button
	class={classList}
	data-toggled={toggled || undefined}
	{...dataAttrs}
>
	<slot>{label}</slot>
</button>

<style>
	.pill {
		--border-color: transparent;
		--color-fill: var(--color-island);
		--color-label: var(--color-secondary);
		--shadow-opacity: 0;

		align-items: center;
		background-color: var(--color-fill);
		border-color: var(--border-color);
		border-radius: var(--border-radius);
		border-style: solid;
		border-width: 1px;
		color: var(--color-label);
		cursor: pointer;
		display: inline-flex;
		font-family: var(--type-font-accent);
		font-size: var(--type-scale-zeta);
		outline: none;
		padding: 0.3em 0.88em;
		position: relative;
		text-decoration: none;
		transition: all 0.25s ease-in-out;
	}

	.pill::after {
		border-radius: var(--border-radius);
		box-shadow: var(--elevation-low);
		content: '';
		display: block;
		inset: 0;
		opacity: var(--shadow-opacity);
		position: absolute;
		transition: opacity 0.25s ease-in-out;
		z-index: 0;
	}

	.pill:hover,
	.pill:active {
		--border-color: var(--color-border);
		--color-label: var(--color-primary);
		--shadow-opacity: 1;
	}

	.pill[data-toggled='true'] {
		/* modify the L value to make sure there's enough contrast with the label */
		--border-color: oklch(from var(--color-highlight) 55% c h);
		--color-fill: var(--border-color);
		--color-label: var(--color-island);
		--shadow-opacity: 1;
	}

	.pill[data-toggled='true']:hover,
	.pill[data-toggled='true']:active {
		/* modify the L value to make sure there's enough contrast with the label */
		--border-color: oklch(from var(--color-highlight) 60% c h);
		--color-fill: var(--border-color);
		--color-label: var(--color-island);
	}

	@media (prefers-color-scheme: dark) {
		:global(.has-dark-mode) .pill[data-toggled='true'] {
			/* modify the L value to make sure there's enough contrast with the label */
			--border-color: oklch(from var(--color-highlight) 80% c h);
			--color-fill: var(--border-color);
			--color-label: var(--color-island);
			--shadow-opacity: 1;
		}

		:global(.has-dark-mode) .pill[data-toggled='true']:hover,
		:global(.has-dark-mode) .pill[data-toggled='true']:active {
			/* modify the L value to make sure there's enough contrast with the label */
			--border-color: oklch(from var(--color-highlight) 85% c h);
			--color-fill: var(--border-color);
			--color-label: var(--color-island);
		}
	}
</style>
