---
// assets
import '@styles/tokens/color.css';
import '@styles/tokens/spacing.css';
import '@styles/utilities/type.css';
import arrowRight from '@icons/arrow-right.svg?raw';

// components
import Icon from '@components/elements/Icon.astro';

// types
import { Align } from '@lib/types';

export interface Props {
	link: string;
	title: string;
	eyebrow?: string;
	icon?: string;
	align?: Align;
	class?: string;
}

const {
	link,
	eyebrow,
	title,
	icon = arrowRight,
	align = 'start',
	class: className = '',
} = Astro.props as Props;

const classList = [
	'next',
	`align-${align}`,
].join(' ');
---

<p class={classList}>
	{eyebrow && (
		<span class="eyebrow | type-role-accent type-scale-epsilon">
			<slot name="eyebrow"></slot>
		</span>
	)}
	<a
		class="title | type-role-display type-scale-gamma type-link-undecorated"
		href={link}
	>
		<slot name="title"></slot>
	</a>
	<Icon svg={icon} size="large" class="icon" />
</p>

<style>
	.next {
		--gap: var(--space-xxnarrow) var(--space-medium);

		align-items: center;
		gap: var(--gap);
		grid-template-areas:
			'eyebrow .'
			'title icon';
		transition: 0.25s color ease;
		will-change: color;
	}

	.next.align-left {
		display: inline-grid;
		grid-template-columns: minmax(0, 1fr) 1.44em;
		grid-template-rows: auto;
		justify-items: start;
	}

	.next.align-right {
		display: grid;
		grid-template-columns: auto auto;
		grid-template-rows: auto auto;
		justify-items: end;
		text-align: end;
	}

	.next:hover :is(.title, .icon),
	.next:active :is(.title, .icon) {
		color: var(--color-highlight);
	}

	.eyebrow {
		display: inline-block;
		grid-area: eyebrow;
	}

	.title {
		display: block;
		grid-area: title;
	}

	.icon {
		grid-area: icon;
		margin: 0;
	}
</style>
