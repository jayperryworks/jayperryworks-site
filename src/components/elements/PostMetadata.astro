---
// assets
import '@styles/utilities/visibility.css';

// helpers
import { format } from 'date-fns';

// components
import DevelopmentStageLabel from '@components/elements/DevelopmentStageLabel.astro';

// types
import {
	DevelopmentStageName,
	PublicationDates
} from '@lib/types';

type formattedDate = {
	posted?: string,
	updated?: string,
	publication?: string,
};

export interface Props {
	date: PublicationDates;
	class?: string,
	showUpdatedDate?: boolean;
	stage?: DevelopmentStageName;
	dateFormat?: string;
}

// default value of `stage` prop is set in the template
// because if a null value is passed in it will override a default here
const {
	date,
	class: className = '',
	stage,
} = Astro.props as Props;

const formattedDate: formattedDate = Object.keys(date).reduce((result, key) => {
	const year = format(date[key], 'yyyy');
	// https://stackoverflow.com/questions/281264/remove-empty-elements-from-an-array-in-javascript#2843625
	const dateSuffix = [
		format(date[key], 'd'),
		// include the year if it's not the current year
		format(new Date(), 'yyyy') !== year && year
	].filter(Boolean).join(', ');

	if (date[key]) {
		// use the abbr element to display the short and full name of the month
		// -> full names appear when there's room (when the component is wide enough)
		result[key] = `
			<abbr title="${format(date[key], 'MMMM')}">
				<span>${format(date[key], 'MMM')}.</span>
			</abbr>&nbsp;${dateSuffix}
		`;
	}

	return result;
}, {});

const showUpdate = formattedDate.posted !== formattedDate.updated;

const classList = [
	'post-metadata',
	className,
].join(' ');
---

<dl class={classList}>
	<div class="item">
		<dt class="hide-visually">Development stage:</dt>
		<dd>
			<DevelopmentStageLabel name={stage} />
		</dd>
	</div>
	<div class="item right group">
		<dt>Published:</dt>
		<dd>
			<time datetime={date.publication} set:html={formattedDate.publication}></time>
		</dd>
	</div>
	{showUpdate && (
		<div class="item group">
			<dt>Last updated:</dt>
			<dd>
				<time datetime={date.updated} set:html={formattedDate.updated}></time>
			</dd>
		</div>
	)}
</dl>

<style>
	.post-metadata {
		--gap: var(--space-xnarrow);

		color: var(--color-secondary);
		container-name: metadata;
		container-type: inline-size;
		display: flex;
		font-family: var(--type-font-accent);
		font-size: var(--type-scale-zeta);
		font-weight: 300;
		gap: var(--gap);
		list-style: none;
	}

	.item {
		align-items: center;
		display: inline-flex;
		flex-wrap: wrap;
		gap: 0 0.25em;
		justify-content: center;
		position: relative;
	}

	.item.right {
		align-self: flex-end;
		margin-inline-start: auto;
	}

	/* add a bullet between grouped items */
	.item.group + .item.group::before {
		content: '-';
		display: inline-block;
		margin-inline-end: 0.25em;
	}

	.item dt {
		display: none;
	}

	.item :global(abbr) {
		display: inline-block;
		text-decoration: none;
	}

	@container metadata (min-width: 30em) {
		.item :global(abbr span) {
			font-size: 0;
			overflow: hidden;
			text-indent: -999999999px;
			width: 1px;
		}

		.item :global(abbr)::after {
			content: attr(title);
		}
	}

	@container metadata (min-width: 38em) {
		.item dt {
			display: unset;
		}

		.item.group + .item.group::before {
			content: '\2022';
			font-weight: bold;
			line-height: 0.5;
			margin-inline-end: calc(var(--gap) / 2);
		}
	}
</style>
