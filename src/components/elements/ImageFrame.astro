---
/**
 * Image Frame component
 * - Display an image with a specific frame
 *
 * @param {ImageField} source - image source data from Prismic
 * @param {boolean} [border] - flag to display a border
 * @param {ImageField} [darkModeSource] - optional dark mode image source
 * @param {ImageFit} [fit] - how to fit the image within its frame/container
 * @param {Frame} [frame] - the frame/device to display around the image
 * @param {number} [maxHeight] - how tall the image is allowed to be, in vh units
 * @param {boolean} [useImageAspectRato=false] - for a device, use the image's own aspect ratio instead of of the default (e.g. 4/3 for a tablet)
 */
// child components
import Image from '@components/elements/Image.astro';
import ImageFrameDevice from '@components/elements/ImageFrameDevice.astro';
import ImageFrameWall from '@components/elements/ImageFrameWall.astro';

// types
import type { ImageField } from '@prismicio/types';
import type { Frame, ImageFit } from '@lib/types';

const {
	source,
	border,
	darkModeSource,
	fit,
	frame,
	maxHeight,
	useImageAspectRatio,
} = Astro.props;

const imageComponents = {
	'None': {
		component: Image,
		props: {
			border,
			darkModeSource,
			fit,
			maxHeight,
			source,
		},
	},
	'Matte': {
		component: ImageFrameWall,
		props: {
			type: 'matte',
			darkModeSource,
			maxHeight,
			source,
		},
	},
	'Frame & matte': {
		component: ImageFrameWall,
		props: {
			type: 'frame',
			darkModeSource,
			maxHeight,
			source,
		},
	},
	'Panel': {
		component: ImageFrameWall,
		props: {
			type: 'panel',
			darkModeSource,
			maxHeight,
			source,
		},
	},
	'Phone': {
		component: ImageFrameDevice,
		props: {
			type: 'Phone',
			darkModeSource,
			maxHeight,
			source,
			useImageAspectRatio,
		},
	},
	'Tablet (landscape)': {
		component: ImageFrameDevice,
		props: {
			type: 'Tablet (landscape)',
			darkModeSource,
			maxHeight,
			source,
			useImageAspectRatio,
		},
	},
	'Tablet (portrait)': {
		component: ImageFrameDevice,
		props: {
			type: 'Tablet (portrait)',
			darkModeSource,
			maxHeight,
			source,
			useImageAspectRatio,
		},
	},
};

const {
	component: ImageComponent,
	props,
} = imageComponents[frame || 'None'];
---

<ImageComponent {...props} />
