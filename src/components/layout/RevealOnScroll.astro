---
export interface Props {
	class?: string;
	tag?: string;
	duration?: string;
}

const {
	class: className = '',
	tag = 'div',
} = Astro.props as Props;

const El = tag;
---

<script>
	const revealedElements = Array.from(document.querySelectorAll('[data-revealed]'));

	if ('IntersectionObserver' in window) {
		const revealObserver = new IntersectionObserver(
			(entries) => entries.forEach((entry) => {
				if (entry.isIntersecting) {
					entry.target.dataset.revealed = 'true';
				}o
			})
		);

		revealedElements.forEach((element) => {
			revealObserver.observe(element);
		})
	}
</script>

<El
	data-revealed
	class={className}
>
	<slot></slot>
</El>

<style is:global>
	.js [data-revealed] {
		opacity: 0;
	}

	.js [data-revealed='ready'] {
		transition: opacity 2s ease-out;
	}

	.js [data-revealed='true'] {
		opacity: 1;
	}
</style>
