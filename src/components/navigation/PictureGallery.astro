---
// utilities
import { picture as permalink } from '@lib/routes';
import * as prismicHelpers from '@prismicio/helpers';

// components
import PictureFrame from '@components/elements/PictureFrame.astro';
import Gallery from '@components/layout/Gallery.astro';
import RevealOnScroll from '@components/layout/RevealOnScroll.astro';

// types
import {
	CSSVariable,
	GallerySize,
	HexColor,
	HSLAColor,
	HSLColor,
	SpaceScale,
} from '@lib/types';
import { PrismicDocumentWithUID } from '@prismicio/types';

export interface Props {
	list: PrismicDocumentWithUID[];
	aspectRatio?: string;
	columnSize?: GallerySize;
	gutter?: SpaceScale;
	matteColor?: CSSVariable | HexColor | HSLColor | HSLAColor,
}

const {
	aspectRatio,
	columnSize = 'medium',
	gutter = 'wide',
	list,
	matteColor,
} = Astro.props as Props;

function frameType(picture) {
	if (prismicHelpers.isFilled.link(picture.data.substrate)) {
		return picture.data.substrate.data.name.includes('Paper') ? 'frame' : 'panel';
	}

	return 'frame';
}
---

<Gallery
	class="picture-gallery"
	size={columnSize}
	{gutter}
>
	{list.map((picture: PrismicDocumentWithUID) => (
		<RevealOnScroll
			tag="li"
			class={[
				picture.data.featured ? 'featured' : '',
				aspectRatio ? 'has-aspect' : '',
			].join(' ')}
			style={ aspectRatio ? `--aspectRatio: ${aspectRatio};` : '' }
		>
			<a
				class="link | type-link-undecorated"
				href={permalink(picture)}
			>
				<PictureFrame
					class="picture"
					matteThickness={frameType(picture) === 'frame' ? 4 : undefined}
					source={picture.data.cover}
					type={frameType(picture)}
					{matteColor}
				/>
			</a>
		</RevealOnScroll>
	))}
</Gallery>

<style is:global>
	.has-aspect {
		aspect-ratio: var(--aspectRatio, none);
	}

	.link {
		display: flex;
		align-items: center;
		justify-content: center;
		flex: 1;
	}

	.has-aspect .link {
		display: grid;
	}

	/* @media screen and (min-width: 40em) {
		.featured {
			grid-area: span 2 / span 2;
		}
	} */
</style>
