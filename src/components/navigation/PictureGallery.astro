---
// utilities
import { picture as permalink } from '@lib/routes';
import * as prismicHelpers from '@prismicio/helpers';

// components
import PictureFrame from '@components/elements/PictureFrame.astro';
import Gallery from '@components/layout/Gallery.astro';
import RevealOnScroll from '@components/layout/RevealOnScroll.astro';

// types
import { GallerySize, SpaceScale } from '@lib/types';
import { PrismicDocumentWithUID } from '@prismicio/types';

export interface Props {
	list: PrismicDocumentWithUID[];
	aspectRatio?: string;
	columnSize?: GallerySize;
	gutter?: SpaceScale;
}

const {
	list,
	aspectRatio = '3 / 2',
	columnSize = 'medium',
	gutter = 'wide',
} = Astro.props as Props;

function frameType(picture) {
	if (prismicHelpers.isFilled.link(picture.data.substrate)) {
		return picture.data.substrate.data.name.includes('Paper') ? 'frame' : 'panel';
	}

	return 'frame';
}
---

<Gallery
	class="picture-gallery"
	size={columnSize}
	{gutter}
>
	{list.map((picture: PrismicDocumentWithUID) => (
		<RevealOnScroll tag="li">
			<a
				class="link | type-link-undecorated"
				href={permalink(picture)}
			>
				<PictureFrame
					fit="cover"
					matteThickness={frameType(picture) === 'frame' ? 4 : undefined}
					source={picture.data.cover}
					type={frameType(picture)}
					{aspectRatio}
					border
				/>
			</a>
		</RevealOnScroll>
	))}
</Gallery>

<style is:global>
	.link {
		display: flex;
		align-items: center;
		justify-content: center;
		flex: 1;
	}
</style>
