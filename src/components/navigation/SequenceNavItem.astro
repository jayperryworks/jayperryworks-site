---
// assets
import '@styles/utilities/type.css';

// components
import Dot from '@components/elements/Dot.astro';
import Tooltip from '@components/elements/Tooltip.astro';

// types
import type { Align } from '@lib/types';

export interface Props {
	href: string;
	complete?: boolean;
	current?: boolean;
	next?: boolean;
	tooltipAlign?: Align;
}

const {
	complete = false,
	current = false,
	next = false,
	href,
	tooltipAlign = 'center',
} = Astro.props as Props;

const classList = [
	'link',
	complete ? 'complete' : '',
	current ? 'current' : '',
	next ? 'next' : '',
].join(' ');

let highlight = 'hover';
if (complete || current) highlight = 'on';
if (next) highlight = 'flashing';
---

<li>
	<Dot
		el="a"
		class={classList}
		{href}
		{highlight}
	>
		<Tooltip class="tooltip" align={tooltipAlign}>
			<slot></slot>
		</Tooltip>
	</Dot>
</li>

<style>
	li,
	li + li {
		margin-top: 0;
	}

	/* increase specificity so it overrides the child component */
	li .link {
		--background-color: var(--color-bg);
	}

	li .link.current,
	li .link.next {
		--color: var(--color-highlight);
	}

	li .link.current,
	li .link.next {
		--border-color: var(--color-primary);
	}


	li .link.complete {
		--color: var(--color-secondary);
	}

	li .link:hover {
		--border-color: var(--color-primary);
		--color: var(--color-primary);
	}

	/* reveal the tooltip when a a is hovered */
	.link:hover .tooltip {
		--show: 1;
	}
</style>
