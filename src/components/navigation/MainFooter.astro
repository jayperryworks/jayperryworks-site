---
// assets
import '@styles/tokens/color.css';
import '@styles/tokens/spacing.css';
import '@styles/tokens/type.css';
import '@styles/tokens/borders.css';
import '@styles/utilities/type.css';
import '@styles/utilities/borders.css';
import arrowRight from '@icons/arrow-right.svg?raw';

// helpers
import { format } from 'date-fns';
import * as prismicHelpers from '@prismicio/helpers';
import prismic from '@lib/prismic';
import { linkResolver, fetchLinks } from '@lib/routes';

// components
import LogoJPW from '@components/logos/LogoJPW.astro';
import Button from '@components/elements/Button.astro';
import RevealOnScroll from '@components/layout/RevealOnScroll.astro';

// types
import { mainNavLink } from '@lib/types';
import { LinkField } from '@prismicio/types';

type Item = {
	name: string,
	link: LinkField,
	attributes?: string,
};

const routesResponse = await prismic.getSingle('main_nav', { fetchLinks });
const routes = routesResponse.data.nav_item.reduce(
	(result, item): mainNavLink[] => {
		const { label, link } = item;

		if (label !== 'About') {
			result.push({
				label,
				link: prismicHelpers.asLink(link, linkResolver),
			});
		}
		return result;
	},
	[]
);

routes.unshift({
	label: 'Home',
	link: Astro.site,
});

const socialChannelsResponse = await prismic.getSingle('social_channels');
const { channel } = socialChannelsResponse.data;


const socialChannelList = channel.map((item: Item) => {
	const { name, link, attributes } = item;

	return `
		<li>
			<a
				class="type-role-accent"
				href="${prismicHelpers.asLink(link)}"
				target="_blank"
				${attributes || ''}
			>
				${name}
			</a>
		</li>
	`.trim();
});

socialChannelList.push(`
	<li>
		<a
		class="type-role-accent"
		href="/rss/feed.xml"
		target="_blank"
		>
			RSS feed
		</a>
	</li>
`);

socialChannelList.join('');

export interface Props {
	showAboutSection?: boolean;
}

const {
	showAboutSection = true,
} = Astro.props as Props;
---

<footer>
	<div class="tier first">
		{showAboutSection && (
			<RevealOnScroll tag="section" class="about">
				<div class="about-wrapper">
					<img
						class="about-portrait"
						src="https://placehold.it/600x600"
					>
					<div class="about-blurb">
						<p>Hi! My name is Jay. I'm a designer, illustrator, and writer living in Baltimore.</p>
						<Button
							href="/about/"
							iconRight={arrowRight}
						>
							A bit more about me
						</Button>
					</div>
				</div>
			</RevealOnScroll>
		)}
		<RevealOnScroll
			class="nav"
			tag="nav"
		>
			<ul
				role="list"
				class="nav-list"
			>
				{routes.map(({ label, link }) => (
					<li>
						<a
							class="type-role-accent"
							href={link}
						>
							{label}
						</a>
					</li>
				))}
			</ul>
		</RevealOnScroll>
	</div>
	<div class="tier second">
		<RevealOnScroll
			tag="section"
			class="social"
		>
			<h2 class="type-scale-gamma">Keep in touch</h2>
			<ul
				class="social-links"
				role="list"
				set:html={socialChannelList}
			>
			</ul>
		</RevealOnScroll>
		<RevealOnScroll
			tag="section"
			class="meta"
		>
			<h2 class="type-scale-gamma">About this site</h2>
			<ul
				class="meta-links"
				role="list"
			>
				<li>
					<a
						class="type-role-accent"
						href="/colophon"
					>
						Colophon
					</a>
				</li>
				<li>
					<a
						class="type-role-accent"
						href="/privacy"
					>
						Privacy
					</a>
				</li>
			</ul>
		</RevealOnScroll>
	</div>
	<RevealOnScroll
		tag="aside"
		class="tier signoff"
	>
		<a
			class="logo | type-link-undecorated"
			href="/"
		>
			<LogoJPW />
		</a>
		<small class="copyright | type-role-accent type-scale-zeta">
			&copy; Copyright {format(new Date(), 'yyyy')} Jay Perry Works, all rights reserved.
		</small>
	</RevealOnScroll>
</footer>

<style>
	footer {
		--spacing: var(--space-wide);

		background-color: var(--color-well);
		display: flex;
		flex-direction: column;
		flex-shrink: 0;
		gap: var(--space-wide);
		padding-inline: var(--space-outside);
		position: relative;
	}

	.tier {
		display: flex;
		flex-direction: column;
		gap: var(--space-wide);
		margin-inline: auto;
		max-width: var(--content-width-xxwide);
		width: 100%;
	}

	.tier + .tier,
	.tier > * + * {
		border-block-start: var(--border-default);
		padding-block-start: var(--spacing);
	}

	.about {
		container-name: about;
		container-type: inline-size;
		padding-block-start: var(--space-xwide);
	}

	.about-blurb {
		align-items: flex-start;
		display: flex;
		flex-direction: column;
		gap: var(--space-narrow);
	}

	.about-portrait {
		aspect-ratio: 1 / 1;
		border-radius: var(--border-radius);
		max-width: 6rem;
		object-fit: cover;
	}

	@container about (min-width: 24em) {
		.about-wrapper {
			display: grid;
			gap: var(--space-medium);
			grid-template-columns: auto 1fr;
			grid-template-rows: auto;
			grid-template-areas:
				'portrait blurb';
		}

		.about-portrait {
			max-width: 8rem;
		}
	}

	@container about (min-width: 34em) {
		.about-portrait {
			max-width: 12rem;
		}
	}

	.nav {
		container-name: nav-list;
		container-type: inline-size;
		display: block;
		min-width: 18rem;
	}

	.nav-list {
		padding: 0;
		margin: 0;
	}

	@container nav-list (min-width: 20em) {
		.nav-list {
			display: flex;
			flex-wrap: wrap;
			gap: var(--space-medium);
		}
	}

	.social {
		display: flex;
		flex-direction: column;
	}

	.social-links {
		display: flex;
		flex-wrap: wrap;
		gap: var(--space-narrow);
		margin: 0;
		padding: 0;
	}

	.meta {
		grid-area: meta;
	}

	.meta-links {
		display: inline-flex;
		flex-wrap: wrap;
		gap: var(--space-narrow);
		padding: 0;
		margin: 0;
	}

	.signoff {
		align-items: center;
		display: flex;
		flex-flow: wrap;
		gap: var(--space-narrow);
		justify-content: space-between;
		overflow: hidden;
		padding-block-end: var(--space-wide);
	}

	.logo {
		/* size of the svg viewbox */
		--width: 141;
		--height: 23;

		aspect-ratio: var(--width) / var(--height);
		display: block;
		max-width: 12rem;
		overflow: hidden;
	}

	.copyright {
		display: flex;
		color: var(--color-secondary);
		align-items: center;
	}

	@media screen and (min-width: 54em) {
		.tier.second {
			flex-direction: row;
			justify-content: space-between;
		}

		.tier > * + * {
			border-block-start: 0;
			padding-block-start: 0;
		}

		.meta {
			justify-self: end;
			text-align: end;
		}

		.meta-list {
			text-align: end;
		}
	}

	@media screen and (min-width: 75em) {
		.tier.first {
			align-items: center;
			display: grid;
			grid-template-columns: 1fr auto;
			padding-block-start: var(--space-wide);
		}

		.about {
			padding-block-start: 0;
		}

		.nav-list {
			text-align: end;
		}
	}
</style>
