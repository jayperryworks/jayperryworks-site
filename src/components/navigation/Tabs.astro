---
/* tabs component

	props
	- number: the note count, defaults to 1
*/

export interface Props {
	class?: string;
}

const {
	nav,
} = Astro.props as Props;
---

<jp-tabs>
	<header>
		<nav>
			<slot name="labels"></slot>
		</nav>
	</header>
	<section class="content">
		<slot name="content"></slot>
	</section>
</jp-tabs>

<script>
	class Tabs extends HTMLElement {

		constructor() {
			super();
		}

		connectedCallback() {
			const $nav = this.querySelectorAll('nav a');
			const $content = this.querySelector('.content > *');

			$nav.forEach(($item) => {
				$item.addEventListener('click', (event) => {
					$nav.forEach(($i) => { $i.classList.remove('active') });
					$item.classList.add('active');

					event.preventDefault();
				});
			})
		}
	}

	customElements.define('jp-tabs', Tabs);
</script>

<style>
	nav {
		display: flex;
		gap: var(--space-narrow);
	}

	nav :global(a) {
		color: red;
	}

	nav :global(.active) {
		color: blue;
	}
</style>
