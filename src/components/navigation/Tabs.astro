---
/* tabs component

	props
	- class: pass in a CSS class name to apply to the container
*/

export interface Props {
	class?: string;
}

const {
	class: className,
} = Astro.props as Props;
---

<jp-tabs class={className}>
	<header>
		<slot name="title"></slot>
		<nav class="scroll-snap">
			<slot name="labels"></slot>
		</nav>
	</header>
	<section class="content scroll-snap">
		<slot name="content"></slot>
	</section>
</jp-tabs>

<script>
	class Tabs extends HTMLElement {
		#activeClass: string;

		constructor() {
			super();
			this.#activeClass = 'active';
		}

		connectedCallback() {
			const $nav = this.querySelectorAll('nav a');
			const $content = this.querySelectorAll('.content > *');

			$nav[0].classList.add(this.#activeClass);
			$content[0].classList.add(this.#activeClass);

			$nav.forEach(($item) => {
				$item.addEventListener('click', (event) => {
					$nav.forEach(($i) => {$i.classList.remove(this.#activeClass) });
					$content.forEach(($c) => {$c.classList.remove(this.#activeClass) });

					$item.classList.add(this.#activeClass);

					const activeContent = this.querySelector((event.target as HTMLElement).getAttribute('href'));
					activeContent.classList.add(this.#activeClass);

					event.preventDefault();
				});
			})
		}
	}

	customElements.define('jp-tabs', Tabs);
</script>

<style>
	jp-tabs {
		--spacing: var(--space-medium);

		display: flex;
		flex-direction: column;
		gap: var(--spacing);
	}

	header {
		display: flex;
		justify-content: space-between;
		align-items: center;
		gap: var(--space-wide);
		flex-wrap: wrap;
		flex-shrink: 0;
		min-block-size: fit-content;
	}

	nav {
		display: flex;
		align-items: baseline;
	}

	nav :global(a) {
		align-items: center;
		color: var(--color-primary);
		display: inline-flex;
		padding: 0.25em 1.13em;
		scroll-snap-align: start;
		text-decoration: none;
		transition: all 0.25s ease-in-out;
		white-space: nowrap;
	}

	nav :global(.active) {
		background-color: var(--color-primary);
		border-radius: 10000px;
		color: var(--color-bg);
	}

	nav :global(.active):hover,
	nav :global(.active):active {
		color: var(--color-bg);
	}

	.content {
		display: grid;
		grid-auto-flow: column;
		grid-auto-columns: 100%;
		overflow-x: scroll;
		block-size: 100%;
	}

	.content > :global(*) {
		scroll-snap-align: start;
	}

	.content :global(.active) {
		border: 2px blue solid;
	}

	.scroll-snap {
		overflow: auto hidden;
		overscroll-behavior-x: contain;
		scroll-snap-type: x mandatory;
	}

	@media (hover: none) {
		.scroll-snap {
			scrollbar-width: none;
		}

		.scroll-snap::-webkit-scrollbar {
			width: 0;
			height: 0;
		}
	}

	@media (prefers-reduced-motion: no-preference) {
		.scroll-snap {
			scroll-behavior: smooth;
		}
	}
</style>
