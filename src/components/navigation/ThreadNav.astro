---
// assets
import '@styles/tokens/borders.css';
import '@styles/tokens/color.css';
import '@styles/tokens/spacing.css';
import '@styles/tokens/type.css';
import '@styles/utilities/type.css';

// components
import Tooltip from '@components/elements/Tooltip.astro';
import Heading from '@components/blocks/Heading.astro';

// types
export interface Props {
	title?: string;
	class?: string;
	currentNumber?: number;
	description?: string;
}

const {
	title,
	class: className = '',
	description,
} = Astro.props as Props;
---

<aside class={className}>
	<Heading level={2} class="type-scale-epsilon">
		This post is part of a thread.
		<span class="help">
			?
			<Tooltip class="tooltip">A series of posts that explore a theme.</Tooltip>
		</span>
	</Heading>
	{(title || description) && (
		<div class="info">
			{title && <Heading level={3} class="type-scale-delta">{title}</Heading>}
			{description && <p class="type-role-accent type-scale-zeta">{description}</p>}
		</div>
	)}
	<details open>
		<summary class="type-role-accent type-scale-zeta">
			<span class="icon">Posts in this thread</span>
		</summary>
		<ol role="list">
			<slot></slot>
		</ol>
	</details>
</aside>

<style>

	.help {
		--label-color: var(--color-primary);
		--label-color-active: var(--color-highlight);
		--size: 2em;

		align-items: center;
		border-radius: 1000px;
		border: 1px solid var(--label-color);
		color: var(--label-color);
		cursor: pointer;
		display: inline-block;
		display: inline-flex;
		flex-direction: column;
		font-family: var(--type-font-accent);
		font-size: 0.6em;
		justify-content: center;
		line-height: inherit;
		margin-block-start: calc((var(--size) / 4) * -1); /* scootch up a little */
		margin-inline: 0.25em;
		min-height: var(--size);
		min-width: var(--size);
		padding: 0.25em;
		position: relative;
		text-align: center;
		transition: color 0.25s ease, border-color 0.25s ease;
		vertical-align: middle;

	}

	.help:hover {
		--label-color: var(--color-highlight);
	}

	.tooltip {
		--max-width: 24rem;
		--min-width: 16rem;
	}

	.help:hover .tooltip {
		--show: 1;
	}

	.info {
		padding-block-start: var(--space-xnarrow);
	}

	.info > :global(* + *) {
		padding-block-start: var(--space-xxnarrow);
	}

	aside {
		background-color: var(--color-well);
		border-radius: var(--border-radius);
		padding: var(--space-narrow);
		text-align: left;
	}

	details {
		border-block-start: var(--border-default);
		margin-block-start: var(--space-narrow);
		padding-block-start: var(--space-xnarrow);
	}

	summary {
		cursor: pointer;
		display: block;
	}

	summary::marker,
	summary::-webkit-details-marker {
		display: none;
	}

	summary:hover,
	summary:active,
	[open] summary {
		color: var(--color-highlight);
	}

	.icon {
		position: relative;
		display: flex;
		align-items: center;
	}

	.icon::before {
		--icon-size: 1.2rem;

		background-color: var(--color-primary);
		content: '';
		display: inline-block;
		height: var(--icon-size);
		margin-inline-end: var(--space-xnarrow);
		mask: url('/assets/icons/expand.svg') center no-repeat;
		mask-size: contain;
		position: relative;
		width: var(--icon-size);
	}

	[open] .icon::before {
		mask-image: url('/assets/icons/collapse.svg');
	}

	summary:hover .icon::before,
	summary:active .icon::before,
	[open] .icon::before {
		background-color: var(--color-highlight);
	}

	ol {
		margin-block-start: var(--space-narrow);
		margin-block-end: 0;
		list-style: none;
		position: relative;
		padding-inline-start: var(--space-wide);
	}

	ol::before {
		content: '';
		display: block;
		position: absolute;
		border-left: var(--border-default);
		top: 0;
		left: 0.5em;
		bottom: 0;
	}

	ol > :global(li + li) {
		margin-block-start: var(--space-narrow);
	}
</style>
