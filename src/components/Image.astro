---
// Responsive image
// -> renders an img tag with srcset from a Prismic image data object
// -> uses Prismic/Imgix's default auto formatting
import * as prismicHelpers from '@prismicio/helpers';
import { ImageField } from '@prismicio/types';

export interface Props {
	source: ImageField,
	border?: boolean,
	class?: string,
	contain?: boolean,
	cover?: boolean,
	widths?: Array<number>,
}

const {
	source,
	border = false,
	class: className = '',
	contain = false,
	cover = false,
	widths = [ 800, 1200, 2000, 2400 ],
} = Astro.props as Props;

const src = prismicHelpers.asImageSrc(source, {
	fit: 'max',
	width: widths[0],
});

console.log(widths.shift())

const srcset = prismicHelpers.asImageWidthSrcSet(source, {
	fit: 'max',
	widths: widths.splice(0, 1),
});

const alt = source.alt;
const width = widths[0];
const height = (source.dimensions.height / source.dimensions.width) * widths[0];

const classList = [
	border && 'border border-solid',
	contain && 'contain',
	cover && 'cover',
	className,
].join(' ');
---

<img
	class={classList}
	decoding="async"
	loading="lazy"
	{alt}
	{src}
	{srcset}
	{width}
	{height}
/>

<style>
	img {
		display: inline-block;
		max-width: 100%;
		object-fit: scale-down;
		content-visibility: auto;
	}

	.contain,
	.cover {
		display: block;
		width: 100%;
		height: 100%;
	}

	.contain {
		object-fit: contain;
	}

	.cover {
		object-fit: cover;
	}
</style>
